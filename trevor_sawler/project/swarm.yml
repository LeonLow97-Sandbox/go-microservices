version: '3'

services:
  broker-service:
    image: lowjiewei/broker-service:1.0.0
    ports:
      - '8080:80'
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: lowjiewei/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: lowjiewei/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: 'host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5'

  logger-service:
    image: lowjiewei/logger-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    image: lowjiewei/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "Leon Low"
      FROM_ADDRESS: "leonlow@email.com"

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    deploy:
      mode: global

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "8025:8025"
    deploy:
      mode: global

  mongo:
    image: 'mongo:4.2.17-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo:/data/db

  postgres:
    image: 'postgres:14.2'
    ports:
      - '5432:5432'
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres:/var/lib/postgresql/data/
      - ./users.sql:/docker-entrypoint-initdb.d/create_tables.sql
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 10s
      timeout: 2s